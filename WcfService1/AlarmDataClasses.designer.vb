'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.544
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AlarmClock")>  _
Partial Public Class AlarmDataClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAlarmDetail(instance As AlarmDetail)
    End Sub
  Partial Private Sub UpdateAlarmDetail(instance As AlarmDetail)
    End Sub
  Partial Private Sub DeleteAlarmDetail(instance As AlarmDetail)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AlarmClockConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AlarmDetails() As System.Data.Linq.Table(Of AlarmDetail)
		Get
			Return Me.GetTable(Of AlarmDetail)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AlarmDetails")>  _
Partial Public Class AlarmDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AlarmNumber As Integer
	
	Private _AlarmText As String
	
	Private _AlarmDateTime As Date
	
	Private _Monday As Boolean
	
	Private _Tuesday As Boolean
	
	Private _Wednesday As Boolean
	
	Private _Thursday As Boolean
	
	Private _Friday As Boolean
	
	Private _Saturday As Boolean
	
	Private _Sunday As Boolean
	
	Private _Snooze As Boolean
	
	Private _SnoozeInterval As Integer
	
	Private _VisualAlarm As Boolean
	
	Private _AudibleAlarm As Boolean
	
	Private _VolumeLevel As Integer
	
	Private _SoundNumber As Integer
	
	Private _Color As String
	
	Private _Blinking As Boolean
	
	Private _Vibrate As System.Nullable(Of Boolean)
	
	Private _Flashlight As System.Nullable(Of Boolean)
	
	Private _email1 As String
	
	Private _email2 As String
	
	Private _email3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAlarmNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnAlarmNumberChanged()
    End Sub
    Partial Private Sub OnAlarmTextChanging(value As String)
    End Sub
    Partial Private Sub OnAlarmTextChanged()
    End Sub
    Partial Private Sub OnAlarmDateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnAlarmDateTimeChanged()
    End Sub
    Partial Private Sub OnMondayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMondayChanged()
    End Sub
    Partial Private Sub OnTuesdayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTuesdayChanged()
    End Sub
    Partial Private Sub OnWednesdayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnWednesdayChanged()
    End Sub
    Partial Private Sub OnThursdayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnThursdayChanged()
    End Sub
    Partial Private Sub OnFridayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFridayChanged()
    End Sub
    Partial Private Sub OnSaturdayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSaturdayChanged()
    End Sub
    Partial Private Sub OnSundayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSundayChanged()
    End Sub
    Partial Private Sub OnSnoozeChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSnoozeChanged()
    End Sub
    Partial Private Sub OnSnoozeIntervalChanging(value As Integer)
    End Sub
    Partial Private Sub OnSnoozeIntervalChanged()
    End Sub
    Partial Private Sub OnVisualAlarmChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVisualAlarmChanged()
    End Sub
    Partial Private Sub OnAudibleAlarmChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAudibleAlarmChanged()
    End Sub
    Partial Private Sub OnVolumeLevelChanging(value As Integer)
    End Sub
    Partial Private Sub OnVolumeLevelChanged()
    End Sub
    Partial Private Sub OnSoundNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnSoundNumberChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnBlinkingChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBlinkingChanged()
    End Sub
    Partial Private Sub OnVibrateChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnVibrateChanged()
    End Sub
    Partial Private Sub OnFlashlightChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFlashlightChanged()
    End Sub
    Partial Private Sub Onemail1Changing(value As String)
    End Sub
    Partial Private Sub Onemail1Changed()
    End Sub
    Partial Private Sub Onemail2Changing(value As String)
    End Sub
    Partial Private Sub Onemail2Changed()
    End Sub
    Partial Private Sub Onemail3Changing(value As String)
    End Sub
    Partial Private Sub Onemail3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlarmNumber", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property AlarmNumber() As Integer
		Get
			Return Me._AlarmNumber
		End Get
		Set
			If ((Me._AlarmNumber = value)  _
						= false) Then
				Me.OnAlarmNumberChanging(value)
				Me.SendPropertyChanging
				Me._AlarmNumber = value
				Me.SendPropertyChanged("AlarmNumber")
				Me.OnAlarmNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlarmText", DbType:="NVarChar(75)")>  _
	Public Property AlarmText() As String
		Get
			Return Me._AlarmText
		End Get
		Set
			If (String.Equals(Me._AlarmText, value) = false) Then
				Me.OnAlarmTextChanging(value)
				Me.SendPropertyChanging
				Me._AlarmText = value
				Me.SendPropertyChanged("AlarmText")
				Me.OnAlarmTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlarmDateTime", DbType:="DateTime NOT NULL")>  _
	Public Property AlarmDateTime() As Date
		Get
			Return Me._AlarmDateTime
		End Get
		Set
			If ((Me._AlarmDateTime = value)  _
						= false) Then
				Me.OnAlarmDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._AlarmDateTime = value
				Me.SendPropertyChanged("AlarmDateTime")
				Me.OnAlarmDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monday", DbType:="Bit NOT NULL")>  _
	Public Property Monday() As Boolean
		Get
			Return Me._Monday
		End Get
		Set
			If ((Me._Monday = value)  _
						= false) Then
				Me.OnMondayChanging(value)
				Me.SendPropertyChanging
				Me._Monday = value
				Me.SendPropertyChanged("Monday")
				Me.OnMondayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tuesday", DbType:="Bit NOT NULL")>  _
	Public Property Tuesday() As Boolean
		Get
			Return Me._Tuesday
		End Get
		Set
			If ((Me._Tuesday = value)  _
						= false) Then
				Me.OnTuesdayChanging(value)
				Me.SendPropertyChanging
				Me._Tuesday = value
				Me.SendPropertyChanged("Tuesday")
				Me.OnTuesdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Wednesday", DbType:="Bit NOT NULL")>  _
	Public Property Wednesday() As Boolean
		Get
			Return Me._Wednesday
		End Get
		Set
			If ((Me._Wednesday = value)  _
						= false) Then
				Me.OnWednesdayChanging(value)
				Me.SendPropertyChanging
				Me._Wednesday = value
				Me.SendPropertyChanged("Wednesday")
				Me.OnWednesdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Thursday", DbType:="Bit NOT NULL")>  _
	Public Property Thursday() As Boolean
		Get
			Return Me._Thursday
		End Get
		Set
			If ((Me._Thursday = value)  _
						= false) Then
				Me.OnThursdayChanging(value)
				Me.SendPropertyChanging
				Me._Thursday = value
				Me.SendPropertyChanged("Thursday")
				Me.OnThursdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Friday", DbType:="Bit NOT NULL")>  _
	Public Property Friday() As Boolean
		Get
			Return Me._Friday
		End Get
		Set
			If ((Me._Friday = value)  _
						= false) Then
				Me.OnFridayChanging(value)
				Me.SendPropertyChanging
				Me._Friday = value
				Me.SendPropertyChanged("Friday")
				Me.OnFridayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saturday", DbType:="Bit NOT NULL")>  _
	Public Property Saturday() As Boolean
		Get
			Return Me._Saturday
		End Get
		Set
			If ((Me._Saturday = value)  _
						= false) Then
				Me.OnSaturdayChanging(value)
				Me.SendPropertyChanging
				Me._Saturday = value
				Me.SendPropertyChanged("Saturday")
				Me.OnSaturdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sunday", DbType:="Bit NOT NULL")>  _
	Public Property Sunday() As Boolean
		Get
			Return Me._Sunday
		End Get
		Set
			If ((Me._Sunday = value)  _
						= false) Then
				Me.OnSundayChanging(value)
				Me.SendPropertyChanging
				Me._Sunday = value
				Me.SendPropertyChanged("Sunday")
				Me.OnSundayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Snooze", DbType:="Bit NOT NULL")>  _
	Public Property Snooze() As Boolean
		Get
			Return Me._Snooze
		End Get
		Set
			If ((Me._Snooze = value)  _
						= false) Then
				Me.OnSnoozeChanging(value)
				Me.SendPropertyChanging
				Me._Snooze = value
				Me.SendPropertyChanged("Snooze")
				Me.OnSnoozeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SnoozeInterval", DbType:="Int NOT NULL")>  _
	Public Property SnoozeInterval() As Integer
		Get
			Return Me._SnoozeInterval
		End Get
		Set
			If ((Me._SnoozeInterval = value)  _
						= false) Then
				Me.OnSnoozeIntervalChanging(value)
				Me.SendPropertyChanging
				Me._SnoozeInterval = value
				Me.SendPropertyChanged("SnoozeInterval")
				Me.OnSnoozeIntervalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisualAlarm", DbType:="Bit NOT NULL")>  _
	Public Property VisualAlarm() As Boolean
		Get
			Return Me._VisualAlarm
		End Get
		Set
			If ((Me._VisualAlarm = value)  _
						= false) Then
				Me.OnVisualAlarmChanging(value)
				Me.SendPropertyChanging
				Me._VisualAlarm = value
				Me.SendPropertyChanged("VisualAlarm")
				Me.OnVisualAlarmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AudibleAlarm", DbType:="Bit NOT NULL")>  _
	Public Property AudibleAlarm() As Boolean
		Get
			Return Me._AudibleAlarm
		End Get
		Set
			If ((Me._AudibleAlarm = value)  _
						= false) Then
				Me.OnAudibleAlarmChanging(value)
				Me.SendPropertyChanging
				Me._AudibleAlarm = value
				Me.SendPropertyChanged("AudibleAlarm")
				Me.OnAudibleAlarmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VolumeLevel", DbType:="Int NOT NULL")>  _
	Public Property VolumeLevel() As Integer
		Get
			Return Me._VolumeLevel
		End Get
		Set
			If ((Me._VolumeLevel = value)  _
						= false) Then
				Me.OnVolumeLevelChanging(value)
				Me.SendPropertyChanging
				Me._VolumeLevel = value
				Me.SendPropertyChanged("VolumeLevel")
				Me.OnVolumeLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoundNumber", DbType:="Int NOT NULL")>  _
	Public Property SoundNumber() As Integer
		Get
			Return Me._SoundNumber
		End Get
		Set
			If ((Me._SoundNumber = value)  _
						= false) Then
				Me.OnSoundNumberChanging(value)
				Me.SendPropertyChanging
				Me._SoundNumber = value
				Me.SendPropertyChanged("SoundNumber")
				Me.OnSoundNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Blinking", DbType:="Bit NOT NULL")>  _
	Public Property Blinking() As Boolean
		Get
			Return Me._Blinking
		End Get
		Set
			If ((Me._Blinking = value)  _
						= false) Then
				Me.OnBlinkingChanging(value)
				Me.SendPropertyChanging
				Me._Blinking = value
				Me.SendPropertyChanged("Blinking")
				Me.OnBlinkingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vibrate", DbType:="Bit")>  _
	Public Property Vibrate() As System.Nullable(Of Boolean)
		Get
			Return Me._Vibrate
		End Get
		Set
			If (Me._Vibrate.Equals(value) = false) Then
				Me.OnVibrateChanging(value)
				Me.SendPropertyChanging
				Me._Vibrate = value
				Me.SendPropertyChanged("Vibrate")
				Me.OnVibrateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Flashlight", DbType:="Bit")>  _
	Public Property Flashlight() As System.Nullable(Of Boolean)
		Get
			Return Me._Flashlight
		End Get
		Set
			If (Me._Flashlight.Equals(value) = false) Then
				Me.OnFlashlightChanging(value)
				Me.SendPropertyChanging
				Me._Flashlight = value
				Me.SendPropertyChanged("Flashlight")
				Me.OnFlashlightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email1", DbType:="NVarChar(75)")>  _
	Public Property email1() As String
		Get
			Return Me._email1
		End Get
		Set
			If (String.Equals(Me._email1, value) = false) Then
				Me.Onemail1Changing(value)
				Me.SendPropertyChanging
				Me._email1 = value
				Me.SendPropertyChanged("email1")
				Me.Onemail1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email2", DbType:="NVarChar(75)")>  _
	Public Property email2() As String
		Get
			Return Me._email2
		End Get
		Set
			If (String.Equals(Me._email2, value) = false) Then
				Me.Onemail2Changing(value)
				Me.SendPropertyChanging
				Me._email2 = value
				Me.SendPropertyChanged("email2")
				Me.Onemail2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email3", DbType:="NVarChar(75)")>  _
	Public Property email3() As String
		Get
			Return Me._email3
		End Get
		Set
			If (String.Equals(Me._email3, value) = false) Then
				Me.Onemail3Changing(value)
				Me.SendPropertyChanging
				Me._email3 = value
				Me.SendPropertyChanged("email3")
				Me.Onemail3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
