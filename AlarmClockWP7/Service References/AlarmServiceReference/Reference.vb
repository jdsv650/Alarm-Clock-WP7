'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.544
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System.Runtime.Serialization

'
'This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
'
Namespace AlarmServiceReference
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AlarmDetail", [Namespace]:="http://schemas.datacontract.org/2004/07/WcfService1")>  _
    Partial Public Class AlarmDetail
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private AlarmDateTimeField As Date
        
        Private AlarmNumberField As Integer
        
        Private AlarmTextField As String
        
        Private AudibleAlarmField As Boolean
        
        Private BlinkingField As Boolean
        
        Private ColorField As String
        
        Private FlashlightField As System.Nullable(Of Boolean)
        
        Private FridayField As Boolean
        
        Private MondayField As Boolean
        
        Private SaturdayField As Boolean
        
        Private SnoozeField As Boolean
        
        Private SnoozeIntervalField As Integer
        
        Private SoundNumberField As Integer
        
        Private SundayField As Boolean
        
        Private ThursdayField As Boolean
        
        Private TuesdayField As Boolean
        
        Private VibrateField As System.Nullable(Of Boolean)
        
        Private VisualAlarmField As Boolean
        
        Private VolumeLevelField As Integer
        
        Private WednesdayField As Boolean
        
        Private email1Field As String
        
        Private email2Field As String
        
        Private email3Field As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AlarmDateTime() As Date
            Get
                Return Me.AlarmDateTimeField
            End Get
            Set
                If (Me.AlarmDateTimeField.Equals(value) <> true) Then
                    Me.AlarmDateTimeField = value
                    Me.RaisePropertyChanged("AlarmDateTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AlarmNumber() As Integer
            Get
                Return Me.AlarmNumberField
            End Get
            Set
                If (Me.AlarmNumberField.Equals(value) <> true) Then
                    Me.AlarmNumberField = value
                    Me.RaisePropertyChanged("AlarmNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AlarmText() As String
            Get
                Return Me.AlarmTextField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AlarmTextField, value) <> true) Then
                    Me.AlarmTextField = value
                    Me.RaisePropertyChanged("AlarmText")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AudibleAlarm() As Boolean
            Get
                Return Me.AudibleAlarmField
            End Get
            Set
                If (Me.AudibleAlarmField.Equals(value) <> true) Then
                    Me.AudibleAlarmField = value
                    Me.RaisePropertyChanged("AudibleAlarm")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Blinking() As Boolean
            Get
                Return Me.BlinkingField
            End Get
            Set
                If (Me.BlinkingField.Equals(value) <> true) Then
                    Me.BlinkingField = value
                    Me.RaisePropertyChanged("Blinking")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Color() As String
            Get
                Return Me.ColorField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ColorField, value) <> true) Then
                    Me.ColorField = value
                    Me.RaisePropertyChanged("Color")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Flashlight() As System.Nullable(Of Boolean)
            Get
                Return Me.FlashlightField
            End Get
            Set
                If (Me.FlashlightField.Equals(value) <> true) Then
                    Me.FlashlightField = value
                    Me.RaisePropertyChanged("Flashlight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Friday() As Boolean
            Get
                Return Me.FridayField
            End Get
            Set
                If (Me.FridayField.Equals(value) <> true) Then
                    Me.FridayField = value
                    Me.RaisePropertyChanged("Friday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Monday() As Boolean
            Get
                Return Me.MondayField
            End Get
            Set
                If (Me.MondayField.Equals(value) <> true) Then
                    Me.MondayField = value
                    Me.RaisePropertyChanged("Monday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Saturday() As Boolean
            Get
                Return Me.SaturdayField
            End Get
            Set
                If (Me.SaturdayField.Equals(value) <> true) Then
                    Me.SaturdayField = value
                    Me.RaisePropertyChanged("Saturday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Snooze() As Boolean
            Get
                Return Me.SnoozeField
            End Get
            Set
                If (Me.SnoozeField.Equals(value) <> true) Then
                    Me.SnoozeField = value
                    Me.RaisePropertyChanged("Snooze")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SnoozeInterval() As Integer
            Get
                Return Me.SnoozeIntervalField
            End Get
            Set
                If (Me.SnoozeIntervalField.Equals(value) <> true) Then
                    Me.SnoozeIntervalField = value
                    Me.RaisePropertyChanged("SnoozeInterval")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SoundNumber() As Integer
            Get
                Return Me.SoundNumberField
            End Get
            Set
                If (Me.SoundNumberField.Equals(value) <> true) Then
                    Me.SoundNumberField = value
                    Me.RaisePropertyChanged("SoundNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Sunday() As Boolean
            Get
                Return Me.SundayField
            End Get
            Set
                If (Me.SundayField.Equals(value) <> true) Then
                    Me.SundayField = value
                    Me.RaisePropertyChanged("Sunday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Thursday() As Boolean
            Get
                Return Me.ThursdayField
            End Get
            Set
                If (Me.ThursdayField.Equals(value) <> true) Then
                    Me.ThursdayField = value
                    Me.RaisePropertyChanged("Thursday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Tuesday() As Boolean
            Get
                Return Me.TuesdayField
            End Get
            Set
                If (Me.TuesdayField.Equals(value) <> true) Then
                    Me.TuesdayField = value
                    Me.RaisePropertyChanged("Tuesday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Vibrate() As System.Nullable(Of Boolean)
            Get
                Return Me.VibrateField
            End Get
            Set
                If (Me.VibrateField.Equals(value) <> true) Then
                    Me.VibrateField = value
                    Me.RaisePropertyChanged("Vibrate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VisualAlarm() As Boolean
            Get
                Return Me.VisualAlarmField
            End Get
            Set
                If (Me.VisualAlarmField.Equals(value) <> true) Then
                    Me.VisualAlarmField = value
                    Me.RaisePropertyChanged("VisualAlarm")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VolumeLevel() As Integer
            Get
                Return Me.VolumeLevelField
            End Get
            Set
                If (Me.VolumeLevelField.Equals(value) <> true) Then
                    Me.VolumeLevelField = value
                    Me.RaisePropertyChanged("VolumeLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Wednesday() As Boolean
            Get
                Return Me.WednesdayField
            End Get
            Set
                If (Me.WednesdayField.Equals(value) <> true) Then
                    Me.WednesdayField = value
                    Me.RaisePropertyChanged("Wednesday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property email1() As String
            Get
                Return Me.email1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.email1Field, value) <> true) Then
                    Me.email1Field = value
                    Me.RaisePropertyChanged("email1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property email2() As String
            Get
                Return Me.email2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.email2Field, value) <> true) Then
                    Me.email2Field = value
                    Me.RaisePropertyChanged("email2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property email3() As String
            Get
                Return Me.email3Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.email3Field, value) <> true) Then
                    Me.email3Field = value
                    Me.RaisePropertyChanged("email3")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="AlarmServiceReference.IAlarm")>  _
    Public Interface IAlarm
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IAlarm/ReturnAlarmList", ReplyAction:="http://tempuri.org/IAlarm/ReturnAlarmListResponse")>  _
        Function BeginReturnAlarmList(ByVal uname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndReturnAlarmList(ByVal result As System.IAsyncResult) As System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail)
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IAlarm/UpdateAlarm", ReplyAction:="http://tempuri.org/IAlarm/UpdateAlarmResponse")>  _
        Function BeginUpdateAlarm(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndUpdateAlarm(ByVal result As System.IAsyncResult) As Integer
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IAlarm/RemoveAlarm", ReplyAction:="http://tempuri.org/IAlarm/RemoveAlarmResponse")>  _
        Function BeginRemoveAlarm(ByVal num As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndRemoveAlarm(ByVal result As System.IAsyncResult) As Integer
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IAlarm/AddAlarm", ReplyAction:="http://tempuri.org/IAlarm/AddAlarmResponse")>  _
        Function BeginAddAlarm(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal usern As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndAddAlarm(ByVal result As System.IAsyncResult) As Integer
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IAlarmChannel
        Inherits AlarmServiceReference.IAlarm, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ReturnAlarmListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail)
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail))
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class UpdateAlarmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class RemoveAlarmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class AddAlarmCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class AlarmClient
        Inherits System.ServiceModel.ClientBase(Of AlarmServiceReference.IAlarm)
        Implements AlarmServiceReference.IAlarm
        
        Private onBeginReturnAlarmListDelegate As BeginOperationDelegate
        
        Private onEndReturnAlarmListDelegate As EndOperationDelegate
        
        Private onReturnAlarmListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginUpdateAlarmDelegate As BeginOperationDelegate
        
        Private onEndUpdateAlarmDelegate As EndOperationDelegate
        
        Private onUpdateAlarmCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginRemoveAlarmDelegate As BeginOperationDelegate
        
        Private onEndRemoveAlarmDelegate As EndOperationDelegate
        
        Private onRemoveAlarmCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginAddAlarmDelegate As BeginOperationDelegate
        
        Private onEndAddAlarmDelegate As EndOperationDelegate
        
        Private onAddAlarmCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event ReturnAlarmListCompleted As System.EventHandler(Of ReturnAlarmListCompletedEventArgs)
        
        Public Event UpdateAlarmCompleted As System.EventHandler(Of UpdateAlarmCompletedEventArgs)
        
        Public Event RemoveAlarmCompleted As System.EventHandler(Of RemoveAlarmCompletedEventArgs)
        
        Public Event AddAlarmCompleted As System.EventHandler(Of AddAlarmCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_BeginReturnAlarmList(ByVal uname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginReturnAlarmList
            Return MyBase.Channel.BeginReturnAlarmList(uname, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_EndReturnAlarmList(ByVal result As System.IAsyncResult) As System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail) Implements AlarmServiceReference.IAlarm.EndReturnAlarmList
            Return MyBase.Channel.EndReturnAlarmList(result)
        End Function
        
        Private Function OnBeginReturnAlarmList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim uname As String = CType(inValues(0),String)
            Return CType(Me,AlarmServiceReference.IAlarm).BeginReturnAlarmList(uname, callback, asyncState)
        End Function
        
        Private Function OnEndReturnAlarmList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail) = CType(Me,AlarmServiceReference.IAlarm).EndReturnAlarmList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnReturnAlarmListCompleted(ByVal state As Object)
            If (Not (Me.ReturnAlarmListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent ReturnAlarmListCompleted(Me, New ReturnAlarmListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub ReturnAlarmListAsync(ByVal uname As String)
            Me.ReturnAlarmListAsync(uname, Nothing)
        End Sub
        
        Public Overloads Sub ReturnAlarmListAsync(ByVal uname As String, ByVal userState As Object)
            If (Me.onBeginReturnAlarmListDelegate Is Nothing) Then
                Me.onBeginReturnAlarmListDelegate = AddressOf Me.OnBeginReturnAlarmList
            End If
            If (Me.onEndReturnAlarmListDelegate Is Nothing) Then
                Me.onEndReturnAlarmListDelegate = AddressOf Me.OnEndReturnAlarmList
            End If
            If (Me.onReturnAlarmListCompletedDelegate Is Nothing) Then
                Me.onReturnAlarmListCompletedDelegate = AddressOf Me.OnReturnAlarmListCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginReturnAlarmListDelegate, New Object() {uname}, Me.onEndReturnAlarmListDelegate, Me.onReturnAlarmListCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_BeginUpdateAlarm(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginUpdateAlarm
            Return MyBase.Channel.BeginUpdateAlarm(alarm, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_EndUpdateAlarm(ByVal result As System.IAsyncResult) As Integer Implements AlarmServiceReference.IAlarm.EndUpdateAlarm
            Return MyBase.Channel.EndUpdateAlarm(result)
        End Function
        
        Private Function OnBeginUpdateAlarm(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim alarm As AlarmServiceReference.AlarmDetail = CType(inValues(0),AlarmServiceReference.AlarmDetail)
            Return CType(Me,AlarmServiceReference.IAlarm).BeginUpdateAlarm(alarm, callback, asyncState)
        End Function
        
        Private Function OnEndUpdateAlarm(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = CType(Me,AlarmServiceReference.IAlarm).EndUpdateAlarm(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnUpdateAlarmCompleted(ByVal state As Object)
            If (Not (Me.UpdateAlarmCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent UpdateAlarmCompleted(Me, New UpdateAlarmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub UpdateAlarmAsync(ByVal alarm As AlarmServiceReference.AlarmDetail)
            Me.UpdateAlarmAsync(alarm, Nothing)
        End Sub
        
        Public Overloads Sub UpdateAlarmAsync(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal userState As Object)
            If (Me.onBeginUpdateAlarmDelegate Is Nothing) Then
                Me.onBeginUpdateAlarmDelegate = AddressOf Me.OnBeginUpdateAlarm
            End If
            If (Me.onEndUpdateAlarmDelegate Is Nothing) Then
                Me.onEndUpdateAlarmDelegate = AddressOf Me.OnEndUpdateAlarm
            End If
            If (Me.onUpdateAlarmCompletedDelegate Is Nothing) Then
                Me.onUpdateAlarmCompletedDelegate = AddressOf Me.OnUpdateAlarmCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginUpdateAlarmDelegate, New Object() {alarm}, Me.onEndUpdateAlarmDelegate, Me.onUpdateAlarmCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_BeginRemoveAlarm(ByVal num As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginRemoveAlarm
            Return MyBase.Channel.BeginRemoveAlarm(num, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_EndRemoveAlarm(ByVal result As System.IAsyncResult) As Integer Implements AlarmServiceReference.IAlarm.EndRemoveAlarm
            Return MyBase.Channel.EndRemoveAlarm(result)
        End Function
        
        Private Function OnBeginRemoveAlarm(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim num As Integer = CType(inValues(0),Integer)
            Return CType(Me,AlarmServiceReference.IAlarm).BeginRemoveAlarm(num, callback, asyncState)
        End Function
        
        Private Function OnEndRemoveAlarm(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = CType(Me,AlarmServiceReference.IAlarm).EndRemoveAlarm(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnRemoveAlarmCompleted(ByVal state As Object)
            If (Not (Me.RemoveAlarmCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent RemoveAlarmCompleted(Me, New RemoveAlarmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub RemoveAlarmAsync(ByVal num As Integer)
            Me.RemoveAlarmAsync(num, Nothing)
        End Sub
        
        Public Overloads Sub RemoveAlarmAsync(ByVal num As Integer, ByVal userState As Object)
            If (Me.onBeginRemoveAlarmDelegate Is Nothing) Then
                Me.onBeginRemoveAlarmDelegate = AddressOf Me.OnBeginRemoveAlarm
            End If
            If (Me.onEndRemoveAlarmDelegate Is Nothing) Then
                Me.onEndRemoveAlarmDelegate = AddressOf Me.OnEndRemoveAlarm
            End If
            If (Me.onRemoveAlarmCompletedDelegate Is Nothing) Then
                Me.onRemoveAlarmCompletedDelegate = AddressOf Me.OnRemoveAlarmCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRemoveAlarmDelegate, New Object() {num}, Me.onEndRemoveAlarmDelegate, Me.onRemoveAlarmCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_BeginAddAlarm(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal usern As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginAddAlarm
            Return MyBase.Channel.BeginAddAlarm(alarm, usern, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function AlarmServiceReference_IAlarm_EndAddAlarm(ByVal result As System.IAsyncResult) As Integer Implements AlarmServiceReference.IAlarm.EndAddAlarm
            Return MyBase.Channel.EndAddAlarm(result)
        End Function
        
        Private Function OnBeginAddAlarm(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim alarm As AlarmServiceReference.AlarmDetail = CType(inValues(0),AlarmServiceReference.AlarmDetail)
            Dim usern As String = CType(inValues(1),String)
            Return CType(Me,AlarmServiceReference.IAlarm).BeginAddAlarm(alarm, usern, callback, asyncState)
        End Function
        
        Private Function OnEndAddAlarm(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = CType(Me,AlarmServiceReference.IAlarm).EndAddAlarm(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnAddAlarmCompleted(ByVal state As Object)
            If (Not (Me.AddAlarmCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent AddAlarmCompleted(Me, New AddAlarmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub AddAlarmAsync(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal usern As String)
            Me.AddAlarmAsync(alarm, usern, Nothing)
        End Sub
        
        Public Overloads Sub AddAlarmAsync(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal usern As String, ByVal userState As Object)
            If (Me.onBeginAddAlarmDelegate Is Nothing) Then
                Me.onBeginAddAlarmDelegate = AddressOf Me.OnBeginAddAlarm
            End If
            If (Me.onEndAddAlarmDelegate Is Nothing) Then
                Me.onEndAddAlarmDelegate = AddressOf Me.OnEndAddAlarm
            End If
            If (Me.onAddAlarmCompletedDelegate Is Nothing) Then
                Me.onAddAlarmCompletedDelegate = AddressOf Me.OnAddAlarmCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginAddAlarmDelegate, New Object() {alarm, usern}, Me.onEndAddAlarmDelegate, Me.onAddAlarmCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As AlarmServiceReference.IAlarm
            Return New AlarmClientChannel(Me)
        End Function
        
        Private Class AlarmClientChannel
            Inherits ChannelBase(Of AlarmServiceReference.IAlarm)
            Implements AlarmServiceReference.IAlarm
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of AlarmServiceReference.IAlarm))
                MyBase.New(client)
            End Sub
            
            Public Function BeginReturnAlarmList(ByVal uname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginReturnAlarmList
                Dim _args((1) - 1) As Object
                _args(0) = uname
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("ReturnAlarmList", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndReturnAlarmList(ByVal result As System.IAsyncResult) As System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail) Implements AlarmServiceReference.IAlarm.EndReturnAlarmList
                Dim _args((0) - 1) As Object
                Dim _result As System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail) = CType(MyBase.EndInvoke("ReturnAlarmList", _args, result),System.Collections.Generic.List(Of AlarmServiceReference.AlarmDetail))
                Return _result
            End Function
            
            Public Function BeginUpdateAlarm(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginUpdateAlarm
                Dim _args((1) - 1) As Object
                _args(0) = alarm
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("UpdateAlarm", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndUpdateAlarm(ByVal result As System.IAsyncResult) As Integer Implements AlarmServiceReference.IAlarm.EndUpdateAlarm
                Dim _args((0) - 1) As Object
                Dim _result As Integer = CType(MyBase.EndInvoke("UpdateAlarm", _args, result),Integer)
                Return _result
            End Function
            
            Public Function BeginRemoveAlarm(ByVal num As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginRemoveAlarm
                Dim _args((1) - 1) As Object
                _args(0) = num
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("RemoveAlarm", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndRemoveAlarm(ByVal result As System.IAsyncResult) As Integer Implements AlarmServiceReference.IAlarm.EndRemoveAlarm
                Dim _args((0) - 1) As Object
                Dim _result As Integer = CType(MyBase.EndInvoke("RemoveAlarm", _args, result),Integer)
                Return _result
            End Function
            
            Public Function BeginAddAlarm(ByVal alarm As AlarmServiceReference.AlarmDetail, ByVal usern As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AlarmServiceReference.IAlarm.BeginAddAlarm
                Dim _args((2) - 1) As Object
                _args(0) = alarm
                _args(1) = usern
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("AddAlarm", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndAddAlarm(ByVal result As System.IAsyncResult) As Integer Implements AlarmServiceReference.IAlarm.EndAddAlarm
                Dim _args((0) - 1) As Object
                Dim _result As Integer = CType(MyBase.EndInvoke("AddAlarm", _args, result),Integer)
                Return _result
            End Function
        End Class
    End Class
End Namespace
